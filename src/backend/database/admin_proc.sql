CREATE OR

ALTER PROCEDURE SP_ADMIN_GET_INFO @MACN INT AS BEGIN DECLARE @result TABLE ( tableID INT, billID INT, date DATE, time TIME, createdBy NVARCHAR(255), isPending BIT, isPaid BIT );
INSERT INTO @result (tableID, billID, date, time, createdBy, isPending, isPaid)
SELECT  BAN.MABAN AS TABLEID
       ,BAN.MAHD  AS BILLID
       ,CASE WHEN BAN.MAHD IS NOT NULL THEN (
SELECT  TOP 1 HOADON.NgayLap
FROM HOADON
WHERE MAHD = BAN.MAHD
ORDER BY NgayLap DESC) ELSE NULL END AS DATE, CASE WHEN BAN.MAHD IS NOT NULL THEN (
SELECT  TOP 1 CONVERT(DATETIME,HOADON.NgayLap)
FROM HOADON
WHERE MAHD = BAN.MAHD
ORDER BY NgayLap DESC) ELSE NULL END AS TIME, CASE WHEN BAN.MAHD IS NOT NULL THEN (
SELECT  TOP 1 NHANVIEN.HOTEN
FROM NHANVIEN
WHERE NHANVIEN.MaNV = (
SELECT  TOP 1 PHIEUDATMON.MaNV
FROM PHIEUDATMON
WHERE PHIEUDATMON.MaHD = BAN.MAHD ORDER BY PHIEUDATMON.NgayLap DESC)) ELSE NULL END AS CREATEDBY, -- NEU BAN CO CHUA MA HOA DON THI BAN DANG PHUC VU 
 CASE WHEN BAN.MaHD IS NOT NULL THEN 1 ELSE 0 END AS ISPENDING, -- NEU BAN CO CHUA MAHD VA MAHD NAY DUOC TIM THAY TRONG DANH SACH DATBAN THI HOA DON DO DA THANH TOAN! 
 CASE WHEN BAN.MAHD IS NOT NULL AND BAN.MAHD IN ( SELECT MAHD FROM DATBAN WHERE MaCN = @MACN) THEN 1 ELSE 0 END AS ISPAID
FROM BAN
WHERE BAN.MaCN = @MACN;

SELECT  * FROM @result; 
END; 
GO


create or ALTER PROCEDURE SP_ADMIN_GET_ALL_TABLE @MACN INT AS BEGIN DECLARE @result TABLE ( tableID INT, billID INT, date DATE, isPending BIT);
INSERT INTO @result (tableID, billID, date, isPending)
SELECT  BAN.MABAN AS TABLEID
       ,BAN.MAHD  AS BILLID
       ,CASE WHEN BAN.MAHD IS NOT NULL THEN (
SELECT  TOP 1 HOADON.NgayLap
FROM HOADON
WHERE MAHD = BAN.MAHD
ORDER BY NgayLap DESC) ELSE NULL END AS DATE, -- NEU BAN CO CHUA MA HOA DON THI BAN DANG PHUC VU 
TinhTrang
FROM BAN
WHERE BAN.MaCN = @MACN;

SELECT  * FROM @result; 
END
GO

CREATE OR

ALTER PROCEDURE SP_QUERY_PAGE @QUERY NVARCHAR(MAX), @PAGE INT = 1, @PAGESIZE INT = 25 AS BEGIN DECLARE @sql NVARCHAR(MAX);

SET @sql = @QUERY + '
ORDER BY (SELECT NULL) OFFSET ' + CAST(@PAGESIZE * (@page - 1) AS VARCHAR) + ' ROWS FETCH NEXT ' + CAST(@PAGESIZE AS VARCHAR) + ' ROWS ONLY'; EXEC sp_executesql @sql; 
END; 
GO
--drop procedure SP_getdishes 

CREATE OR ALTER PROCEDURE SP_GETDISHES @MACN INT, @PAGESIZE INT, @PAGE INT, @CATEGORY NVARCHAR(100) = '%' 
AS BEGIN
SELECT  PHUCVU.isServed, MONAN.*
FROM PHUCVU
JOIN MONAN
ON MONAN.MaMon = PHUCVU.MaMon
WHERE MACN = @MACN
AND MONAN.PhanLoai LIKE @CATEGORY
ORDER BY MONAN.MaMon ASC OFFSET @PAGESIZE *(@PAGE - 1) ROWS FETCH NEXT @PAGESIZE ROWS ONLY; 
END;
GO

CREATE OR ALTER PROCEDURE sp_GetTotalRevenue
@MaCN INT,
@StartDate DATE, 
@EndDate DATE, 
@TotalRevenue BIGINT OUTPUT, 
@TotalNewMember Int output, 
@TotalBills int output
AS BEGIN

SET NOCOUNT ON;

-- Tong doanh thu
SELECT  @TotalRevenue = SUM(HoaDon.TongHoaDon)
FROM HoaDon
WHERE (NgayLap BETWEEN @StartDate AND @EndDate) AND HOADON.MaCN = @MaCN;

-- Tong so thanh vien moi
SELECT  @TotalNewMember = COUNT(MaThe)
FROM thethanhvien
WHERE (NgayLap BETWEEN @StartDate AND @EndDate)
AND (THETHANHVIEN.MaKH NOT IN ( SELECT makh FROM THETHANHVIEN tv1 WHERE tv1.NgayLap BETWEEN '1970-01-01' AND DateAdd(Day, -1, @StartDate)))
AND THETHANHVIEN.MaNV IN (SELECT MANV FROM DOICN WHERE DOICN.MaCN = @MaCN AND THETHANHVIEN.NgayLap 
BETWEEN NgayBatDau AND (CASE WHEN NgayKetThuc IS NULL THEN GETDATE() ELSE NgayKetThuc END))

-- Tong so hoa don
SELECT  @TotalBills = COUNT(MaHD)
FROM hoadon
WHERE (NgayLap BETWEEN @StartDate AND @EndDate) AND HOADON.MaCN = @MaCN;

-- Danh sach cac mon an duoc ban ra
DECLARE @RECENTSALES AS TABLE(NAME NVARCHAR(255), CATEGORY NVARCHAR(255), IMAGE NVARCHAR(350), TOTALSALES BIGINT);
INSERT INTO @recentSales (name, category, image, totalSales)
SELECT MonAn.TenMon, MonAn.PhanLoai, MonAn.HinhAnh
       , SUM(ChonMon.SoLuong * MONAN.GiaTien)
FROM PHIEUDATMON 
JOIN CHONMON ON chonmon.maphieu = PHIEUDATMON.maphieu
JOIN MonAn ON ChonMon.MaMon = MonAn.MaMon
JOIN HOADON ON HOADON.MaHD = PHIEUDATMON.MaHD
WHERE (PHIEUDATMON.NgayLap BETWEEN '2024-12-01' AND '2024-12-31')
AND HOADON.MaCN = @MACN
GROUP BY  MonAn.TenMon, MonAn.PhanLoai, MonAn.HinhAnh;

SELECT * FROM @RECENTSALES ORDER BY TOTALSALES DESC;

END;

GO
         
-- -- Staticstic BETWEEN @startDate AND @EndDate 
-- SELECT  MaKH
--        ,COUNT(mathe) AS TotalCards
-- FROM THETHANHVIEN
-- WHERE NgayLap BETWEEN '2024-12-01' AND '2024-12-31'
-- GROUP BY  MaKH

-- SELECT  COUNT(mathe)
-- FROM thethanhvien
-- WHERE (NgayLap BETWEEN '2024-12-01' AND '2024-12-31')
-- AND (THETHANHVIEN.MaKH NOT IN ( SELECT makh FROM THETHANHVIEN tv1 WHERE tv1.NgayLap BETWEEN '1970-01-01' AND '2024-12-01'))

-- SELECT  MonAn.TenMon
--        ,MonAn.PhanLoai
--        ,MonAn.HinhAnh
--        ,SUM(ChonMon.SoLuong * MONAN.GiaTien) as N'Doanh thu'
-- FROM PHIEUDATMON JOIN CHONMON ON chonmon.maphieu = PHIEUDATMON.maphieu
-- JOIN MonAn ON ChonMon.MaMon = MonAn.MaMon
-- WHERE PHIEUDATMON.NgayLap BETWEEN '2024-12-01' AND '2024-12-31'
-- GROUP BY  MonAn.TenMon
--          ,MonAn.PhanLoai
--          ,MonAn.HinhAnh;
GO

--
CREATE OR ALTER PROCEDURE SP_CREATE_DISH @NAME NVARCHAR(255), @CATEGORY NVARCHAR(255),
@PRICE INT, @IMAGE NVARCHAR(350), @DELIVERY BIT = 0
AS BEGIN
	DECLARE @ID INT;
	SET @ID = (SELECT TOP 1 MAMON FROM MONAN ORDER BY MAMON DESC) + 1;
	SET IDENTITY_INSERT MONAN ON
	INSERT INTO MONAN(MaMon,TenMon,PhanLoai,GiaTien,HinhAnh,GiaoHang) VALUES
	(@ID,@NAME,@CATEGORY,@PRICE,@IMAGE,@DELIVERY);
END;
GO
--

CREATE OR ALTER PROCEDURE SP_CREATE_CUSTOMER @USERNAME NVARCHAR(100) = NULL, @HOTEN NVARCHAR(255),
@SDT VARCHAR(10), @EMAIL NVARCHAR(255) = NULL, @CCCD CHAR(12) = NULL, @ISMALE BIT = 0
AS BEGIN
DECLARE @ID INT;
SET @ID = (SELECT TOP 1 MAKH FROM KHACHHANG ORDER BY MAKH DESC) + 1;

DECLARE @GENDER VARCHAR(6);
SET @GENDER = CASE WHEN @ISMALE = 1 THEN 'Male' ELSE 'Female' END;

SET IDENTITY_INSERT KHACHHANG ON
INSERT INTO KHACHHANG(MaKH,Username,HoTen,SDT,Email,CCCD,GioiTinh) VALUES
(@ID,@USERNAME,@HOTEN,@SDT,@EMAIL,@CCCD,@GENDER);
END;
GO
--
CREATE OR ALTER PROCEDURE SP_CREATE_EMPLOYEE @HOTEN NVARCHAR(255), @NGAYSINH DATE, @NGAYVAOLAM DATE,
@NGAYNGHIVIEC DATE = NULL, @USERNAME NVARCHAR(255) = NULL, @MABP CHAR(2), @CN_HIENTAI CHAR(2)
AS BEGIN
DECLARE @ID INT;
SET @ID = (SELECT TOP 1 MANV FROM NHANVIEN ORDER BY MANV DESC) + 1;
SET IDENTITY_INSERT NHANVIEN ON
INSERT INTO NHANVIEN(MaNV,HoTen,NgaySinh,NgayVaoLam,NgayNghiViec,MaBP,CN_Hientai) VALUES
(@ID,@HOTEN,@NGAYSINH,@NGAYVAOLAM,@NGAYNGHIVIEC,@MABP,@CN_HIENTAI);
END;
GO
--
CREATE OR ALTER PROCEDURE SP_CREATE_STAFF_TRANSFER
@MANV INT, @TO_CN CHAR(2)
AS BEGIN

IF (SELECT COUNT(MANV) FROM NHANVIEN WHERE MANV = @MANV) = 0
BEGIN
	RAISERROR('NHAN VIEN KHONG TON TAI', 16, 1);
	RETURN;
END;

IF ((SELECT CN_HIENTAI FROM NHANVIEN WHERE MANV = @MANV) = @TO_CN)
BEGIN
RAISERROR('DU LIEU CHI NHANH KHONG HOP LE', 16, 1);
RETURN;
END;

DECLARE @CN_HIENTAI CHAR(2);
SET @CN_HIENTAI = (SELECT CN_HIENTAI FROM NHANVIEN WHERE MANV = @MANV);

UPDATE DOICN SET NgayKetThuc = GETDATE() WHERE DOICN.MANV = @MANV AND DOICN.NgayKetThuc = NULL;
UPDATE NHANVIEN SET CN_Hientai = @TO_CN WHERE @MANV = MANV;
INSERT INTO DOICN(MaNV,MaCN,NgayBatDau) VALUES (@MANV,@TO_CN,DATEADD(DAY, 1, GETDATE()));
END;
GO

CREATE OR ALTER PROCEDURE SP_CREATE_MEMBER @MATHE CHAR(6), @LOAITHE VARCHAR(10) = 'Normal',
@DIEMTICHLUY INT = 0, @MAKH INT, @MANV INT
AS BEGIN
IF (SELECT COUNT(MAKH) FROM KHACHHANG WHERE MAKH = @MAKH) = 0  OR
   ((SELECT COUNT(MANV) FROM NHANVIEN WHERE @MANV = MANV) = 0)
BEGIN
RAISERROR('DU LIEU MA KHACH HANG HOAC MA NHAN VIEN KHONG HOP LE', 16, 1);
RETURN;
END;

DECLARE @TODAY DATE;
SET @TODAY = GETDATE();

-- VO HIEU HOA TAT CA CAC THE DA TAO TRUOC DO (NEU CO)
UPDATE THETHANHVIEN SET IsActive = 0 WHERE MAKH = @MAKH;
-- THEM THE MOI VAO BANG
INSERT INTO THETHANHVIEN(MaThe,NgayLap,LoaiThe,DiemTichLuy,NgayDatThe,IsActive,MAKH,MANV) VALUES
(@MATHE,@TODAY,@LOAITHE,@DIEMTICHLUY,@TODAY,1,@MAKH,@MANV);
END;
GO

CREATE OR ALTER PROCEDURE SP_ADD_DISH_TO_BRANCH @MACN CHAR(2), @MAMON INT
AS BEGIN

IF (@MACN NOT IN (SELECT MACN FROM CHINHANH)) OR
(@MAMON NOT IN (SELECT MAMON FROM THUCDON WHERE THUCDON.MaKV = (SELECT MAKV FROM CHINHANH WHERE MaCN = @MACN)))
BEGIN 
RAISERROR('DU LIEU DAU VAO KHONG HOP LE! CHI NHANH KHONG TON TAI HOAC MON AN KHONG HOP LE', 16, 1);
RETURN;
END;

INSERT INTO PHUCVU(MACN,MaMon,isServed) VALUES (@MACN,@MAMON,1);
END;
GO

CREATE OR ALTER PROCEDURE SP_CREATE_ORDER
    @MANV INT,
    @ISEATIN BIT,
    @MABAN VARCHAR(3)
AS
BEGIN
    SET NOCOUNT ON;

    -- Kiểm tra nếu MANV không tồn tại trong bảng NHANVIEN
    IF (@MANV NOT IN (SELECT MANV FROM NHANVIEN))
    BEGIN 
        RAISERROR('DU LIEU DAU VAO KHONG HOP LE! NHAN VIEN KHONG TON TAI', 16, 1);
        RETURN;
    END;

    DECLARE @MACN CHAR(2);
    SET @MACN = (SELECT CN_HIENTAI FROM NHANVIEN WHERE @MANV = MANV);

    DECLARE @MAHD INT;
    SET @MAHD = (SELECT ISNULL(MAX(MAHD), 0) + 1 FROM HOADON);

    DECLARE @MAPHIEU INT;
    SET @MAPHIEU = (SELECT ISNULL(MAX(MAPHIEU), 0) + 1 FROM PHIEUDATMON);

    -- Chèn dữ liệu vào bảng HOADON
	SET IDENTITY_INSERT HOADON ON
    INSERT INTO HOADON (MAHD, NGAYLAP, ISEATIN, MACN)
    VALUES (@MAHD, GETDATE(), @ISEATIN, @MACN);

    -- Chèn dữ liệu vào bảng PHIEUDATMON
	SET IDENTITY_INSERT HOADON OFF
	SET IDENTITY_INSERT PHIEUDATMON ON
    INSERT INTO PHIEUDATMON (MaPhieu, NGAYLAP, MABAN, MaNV, MAHD)
    VALUES (@MAPHIEU, GETDATE(), @MABAN, @MANV, @MAHD);

    SELECT @MAPHIEU AS 'MaPhieu';
    SELECT @MAHD AS 'MaHD';
END;
GO

CREATE OR ALTER PROCEDURE SP_CREATE_CHONMON @MAPHIEU INT, @MAMON INT, @SL TINYINT = 1
AS BEGIN

DECLARE @MACN INT;
SET @MACN = (SELECT MACN FROM HOADON WHERE HOADON.MAHD = (SELECT MAHD FROM PHIEUDATMON WHERE MAPHIEU = @MAPHIEU));

DECLARE @MAHD INT;
SET @MAHD = (SELECT MAHD FROM PHIEUDATMON WHERE MAPHIEU = @MAPHIEU);

IF (SELECT COUNT(MAPHIEU) FROM PHIEUDATMON WHERE MAPHIEU = @MAPHIEU) = 0 
OR (@MAMON NOT IN (SELECT MAMON FROM PHUCVU WHERE MACN = @MACN 
OR (SELECT ISSERVED FROM PHUCVU WHERE MAMON = @MAMON AND MACN = @MACN) = 0))
BEGIN 
RAISERROR('DU LIEU DAU VAO KHONG HOP LE!', 16, 1);
RETURN;
END;

INSERT INTO CHONMON(MAPHIEU,MaMon,SoLuong,TraMon) VALUES (@MAPHIEU,@MAMON,@SL,0);

-- KHI CHON MON MOI THI TINH TIEN VA CONG DON VAO TONGTIEN CUA PHIEUDATMON
DECLARE @TONGTIEN_CU INT;
SET @TONGTIEN_CU = (SELECT TONGTIEN FROM PHIEUDATMON WHERE MaPhieu = @MAPHIEU);
DECLARE @TONGTIEN_CHONMON INT;
SET @TONGTIEN_CHONMON = (SELECT GIATIEN * @SL FROM MONAN WHERE MAMON = @MAMON);
UPDATE PHIEUDATMON SET TongTien = @TONGTIEN_CU + @TONGTIEN_CHONMON WHERE MAPHIEU = @MAPHIEU;

-- TIEP TUC CONG DON VAO TONGHOADON TRONG BANG HOA DON
SET @TONGTIEN_CU = (SELECT TONGHOADON FROM HOADON WHERE MaHD = @MAHD);
UPDATE HOADON SET TongHoaDon = @TONGTIEN_CU + @TONGTIEN_CHONMON;

END;
GO

CREATE OR ALTER PROCEDURE SP_DELETE_CUSTOMER @MAKH INT
AS BEGIN

IF (SELECT COUNT(MAKH) FROM KHACHHANG WHERE MAKH = @MAKH) = 0
BEGIN
RAISERROR('KHACH HANG KHONG TON TAI',16,1);
RETURN;
END;
UPDATE HOADON 
SET MaThe = NULL
FROM HOADON JOIN THETHANHVIEN ON HOADON.MaThe = THETHANHVIEN.MaThe
WHERE THETHANHVIEN.MaKH = @MAKH;
DELETE FROM THETHANHVIEN WHERE MaKH = @MAKH;
DELETE FROM KHACHHANG WHERE MaKH = @MAKH;
END;
GO

CREATE OR ALTER PROCEDURE SP_DELETE_DISH @MAMON INT
AS BEGIN
IF (SELECT COUNT(MAMON) FROM MONAN WHERE MAMON =@MAMON) = 0
BEGIN
RAISERROR('MON AN KHONG TON TAI',16,1);
RETURN;
END;

DELETE FROM PHUCVU WHERE MAMON=@MAMON;
DELETE FROM THUCDON WHERE MAMON=@MAMON;
DELETE FROM MONAN WHERE MAMON=@MAMON;

END;
GO

CREATE OR ALTER PROCEDURE SP_DELETE_ORDER @MAPHIEU INT
AS BEGIN

IF (SELECT COUNT(MAPHIEU) FROM PHIEUDATMON WHERE MAPHIEU = @MAPHIEU) = 0
BEGIN
RAISERROR('PHIEU DAT MON KHONG TON TAI',16,1);
RETURN;
END;

DECLARE @MAHD INT;
SET @MAHD = (SELECT MAHD FROM PHIEUDATMON WHERE @MAPHIEU = MAPHIEU);
DELETE FROM PHIEUDATMON WHERE MAPHIEU = @MAPHIEU;
SELECT @MAHD AS 'MAHD';
END;
GO


